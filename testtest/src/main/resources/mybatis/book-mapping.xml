<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mybatis.bookMapper">
	
	
	<insert parameterType="bookDTO" id="insertBook">
	INSERT INTO book VALUES(seq_book.nextval, #{id}, #{koreanName}, #{englishName}, #{birthday}, 
	#{passportNum}, #{nation}, #{code}, #{flightName1}, #{flightName2}, #{airportName1}, #{airportName2}, #{dep1}, 
	#{ar1}, #{dep2},#{ar2}, #{age}, #{totalPrice},#{nop},#{luggage},#{eatery}, sysdate) 
	</insert>

	<delete parameterType="int" id="deleteBook">
	DELETE FROM book WHERE seq = #{seq} 
	</delete>


	<select id="getBookTotal" resultType="int">

	<![CDATA[SELECT count(*) FROM book]]>
	</select>

	<select parameterType="java.util.Map" id="getBookAll" resultType="bookDTO">
	SELECT * FROM book 
	</select>

	<select parameterType="string" id="getBookOne" resultType="bookDTO">
	SELECT * FROM book WHERE id=#{id} 
	</select>

	<!--step1 공항과 날짜에 맞는 항공권 검색  -->
	<select parameterType="flightInfoDTO" id="getAirlineTicket" resultType="flightInfoDTO">
	  select flightName1 as flightName1
	  	   , depTime1 as depTime1
	  	   , arrTime1 as arrTime1
	  	   , depPrice1  as depPrice1
	    from flightInfo 
	   where depDate1 = TO_DATE(#{depDate1}, 'YYYY-MM-DD') 
	     and depAirCode1=TRIM(#{depAirCode1,javaType=String,jdbcType=VARCHAR}) 
	     and arrAirCode1=TRIM(#{arrAirCode1,javaType=String,jdbcType=VARCHAR}) 
	</select>
	
	<!-- step2 탑승객별 운임 -->
	<select parameterType="string" id="passengerCharge" resultType="flightInfoDTO">
	 select depPrice1,depFuelPrice1,depAirportPrice1 from FLIGHTINFO where flightName1=#{flightName1}
	</select>
	
</mapper>
